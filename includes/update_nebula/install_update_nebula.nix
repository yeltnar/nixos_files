{
  config,
  pkgs,
  ...
}: let
  cloned_repo = builtins.fetchGit {
    url = "https://github.com/yeltnar/nebula-ansible";
  };
  vardir = "/var/yeltnar-nebula";
  user = "drew";
  group = "100";
in {
  system.activationScripts.setup_nebula_env = {
    text = ''
      text_to_check="# setup nebula env # ";

      dir_to_add="/home/${user}/.config/extra_includes";
      file_to_add="$dir_to_add/setup_nebula_env";
      text_to_add="source $file_to_add"; # TODO remove

      mkdir -p "$dir_to_add";
      chown -R ${user}:${group} "$dir_to_add";

      # create sourced file if not there
      cat > $file_to_add <<- EOM
        # DO NOT EDIT THIS FILE... IT IS GENERATED

        # only continue if interactive
        if [[ ! \$- == *i* ]]
        then
            exit;
        fi


        # alert missing files
        if [ ! -e ${vardir}/.env ]; then
          echo "!! ${vardir}/.env is not present";
        fi
        if [ ! -e ${vardir}/knownca.pem ]; then
          echo "!! ${vardir}/knownca.pem is not present";
        fi
        if [ ! -e ${vardir}/id_rsa ]; then
          echo "!! ${vardir}/id_rsa is not present";
        fi
        if [ ! -e ${vardir}/id_rsa.pub ]; then
          echo "!! ${vardir}/id_rsa.pub is not present";
        fi
      EOM

      chown ${user}:${group} "$file_to_add";

      # create bashrc file if not there
      if [ ! -e /home/${user}/.bashrc ]; then
        touch /home/${user}/.bashrc;
        chown ${user} /home/${user}/.bashrc;
      fi

      # create update_nebula dir if not there
      if [ ! -d ${vardir} ]; then
        mkdir -p ${vardir}
        chown ${user} ${vardir};
      fi

      # create compare_date.sh file if not there
      if [ ! -e ${vardir}/compare_date.sh ]; then
        cp ${cloned_repo.outPath}/compare_date.sh ${vardir}/compare_date.sh;
        chown ${user}:${group} ${vardir}/compare_date.sh;
      fi
      # create process_tar.sh file if not there
      if [ ! -e ${vardir}/process_tar.sh ]; then
        cp ${cloned_repo.outPath}/process_tar.sh ${vardir}/process_tar.sh;
        chown ${user}:${group} ${vardir}/process_tar.sh;
      fi

      if [ ! -e ${vardir}/id_rsa ]; then
        pushd ${vardir};
        # TODO # create id_rsa(.pub) if theyre not there;
        ${pkgs.openssh}/bin/ssh-keygen -t rsa -m PEM -N "" -q -f "${vardir}/id_rsa" -b 4096;
        popd;
      fi

      test_str=$(cat /home/${user}/.bashrc | grep "$text_to_check");
      # echo $text_to_check;
      # echo $test_str;

      if [ -z "$test_str" ]; then
        echo "$text_to_check" >> /home/${user}/.bashrc;
        echo "$text_to_add" >> /home/${user}/.bashrc;
      fi
    '';
  };
}
